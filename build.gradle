
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.5.7'
    }
}

apply plugin: 'android'
apply plugin: 'eclipse'

dependencies {
  compile 'com.google.android.gms:play-services:3.2.25'
}

android {
    compileSdkVersion 18
    buildToolsVersion '18.1'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            resources.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

    signingConfigs {
      release
    }

    buildTypes {
        debug {
            jniDebugBuild true
        }

        release {
            debuggable true
            runProguard true
            proguardFile 'proguard.cfg'
            signingConfig signingConfigs.release
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs = ['-Xlint:all', '-Werror']
}

if (hasProperty('StoreFile')) {
    android.signingConfigs.release.storeFile = file(StoreFile)
    android.signingConfigs.release.storePassword = StorePassword
    android.signingConfigs.release.keyAlias = KeyAlias
    android.signingConfigs.release.keyPassword = KeyPassword
} else {
    android.buildTypes.release.signingConfig = null
}

// Generate AndroidManifest.xml
String googleAPIKey = hasProperty('APIKey') ? APIKey : "FAKE_GOOGLE_API_KEY";
String mozillaAPIKey = hasProperty('MozAPIKey') ? MozAPIKey : "FAKE_MOZILLA_API_KEY";

File manifest = file("./AndroidManifest.xml.in")
String content = manifest.getText('UTF-8')
content = content.replaceAll(/MY_GOOGLE_API_KEY/, googleAPIKey)
content = content.replaceAll(/MY_MOZILLA_API_KEY/, mozillaAPIKey)

manifest = file("./AndroidManifest.xml")
manifest.write(content, 'UTF-8')

